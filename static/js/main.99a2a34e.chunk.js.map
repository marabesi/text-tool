{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","text","setText","charCount","setCharCount","wordCount","setWordCount","useEffect","length","split","className","onChange","changed","target","value","defaultValue","rows","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAsCeA,MAnCf,WACE,MAAwBC,mBAAiB,IAAzC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,qBAAlC,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAkCJ,mBAAiB,GAAnD,mBAAOK,EAAP,KAAkBC,EAAlB,KAYA,OAVAC,qBAAU,WACRH,EAAaH,EAAKO,QAGhBF,EADEL,EACWA,EAAKQ,MAAM,KAAKD,OAEhB,EAEhB,GAAE,CAACP,IAGF,sBAAKS,UAAU,gBAAf,UACE,sBAAKA,UAAU,OAAf,UACE,oBAAGA,UAAU,mBAAb,oBAAwCP,KACxC,oBAAGO,UAAU,mBAAb,oBAAwCL,QAG1C,qBAAKK,UAAU,MAAf,SACE,0BACEA,UAAU,+BACV,cAAY,YACZC,SAAU,SAAAC,GAAO,OAAIV,EAAQU,EAAQC,OAAOC,MAA3B,EACjBC,aAAcd,EACde,KAAM,SAKf,ECtBcC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACT,GAEJ,E,MCNDQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,G","file":"static/js/main.99a2a34e.chunk.js","sourcesContent":["import 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  const [text, setText] = useState<string>('');\n  const [charCount, setCharCount] = useState<number>();\n  const [wordCount, setWordCount] = useState<number>(0);\n\n  useEffect(() => {\n    setCharCount(text.length);\n\n    if (text) {\n      setWordCount(text.split(' ').length);\n    } else {\n      setWordCount(0);\n    }\n  }, [text]);\n\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"flex\">\n        <p className=\"p-2 m-2 border-2\">Chars: {charCount}</p>\n        <p className=\"p-2 m-2 border-2\">Words: {wordCount}</p>\n      </div>\n\n      <div className=\"m-2\">\n        <textarea\n          className=\"border-2 w-full outline-none\"\n          data-testid=\"text-area\"\n          onChange={changed => setText(changed.target.value)}\n          defaultValue={text}\n          rows={10}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}