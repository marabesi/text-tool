{"version":3,"sources":["use-cases/types/StopWords.ts","presenters/word-count.ts","use-cases/words-count.ts","reactjs/App.tsx","reportWebVitals.ts","index.tsx"],"names":["defaultStopWords","replace","format","text","stopWords","isStopWordsEnabled","strings","listOfStrings","filter","length","_step","_iterator","_createForOfIteratorHelper","s","n","done","stop","value","includes","err","e","f","empty","word","push","rank","count","_loop","_word","found","find","sortByMostFrequent","sort","a","b","i","wordCountFor","App","_useState","useState","_useState2","_slicedToArray","setText","_useState3","_useState4","charCount","setCharCount","_useState5","_useState6","wordCount","setWordCount","_useState7","_useState8","mostFrequent","setMostFrequent","_useState9","_useState10","setStopWords","_useState11","_useState12","setIsStopWordsEnabled","_useState13","_useState14","originalStopWords","setOriginalStopWords","useEffect","onStopWordsChanged","_format","split","cleanedStopWords","map","_jsxs","className","children","htmlFor","_jsx","type","id","checked","onChange","changed","target","style","minHeight","defaultValue","rows","placeholder","disabled","frequent","index","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"oLAAaA,G,MAAmB,4NAsC5BC,QAAQ,MAAO,K,OCnCZ,SAASC,EAAOC,EAAgBC,EAAqBC,GAC1D,OAAIF,ECFC,SAAsBG,EAAmBF,EAAqBC,GACnE,IAAIE,EAAgBD,EAAQE,QAAO,SAAAF,GAAO,MAAgB,KAAZA,CAAc,IAExDF,EAAUK,QAAUJ,IACtBE,EAAgBA,EAAcC,QAAO,SAAAF,GAAY,IACrBI,EADoBC,EAAAC,YAC7BR,GAAS,IAA1B,IAAAO,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAA4B,CAAC,IAApBC,EAAIN,EAAAO,MACX,GAAIX,EAAQY,SAASF,GACnB,OAAO,CAEX,CAAC,OAAAG,GAAAR,EAAAS,EAAAD,EAAA,SAAAR,EAAAU,GAAA,CACD,OAAO,CACT,KAGF,IAAMC,EAAQ,GACd,IAAK,IAAMC,KAAQhB,EACjBe,EAAME,KACJ,CAAEC,KAAM,EAAGF,KAAMhB,EAAcgB,GAAOG,MAAO,IAEhD,IAAAC,EAAA,SAAAC,GAGC,IAAMC,EAAkCP,EAAMQ,MAAK,SAAAxB,GAAO,OAAIA,EAAQiB,OAAShB,EAAcgB,EAAK,IAC9FM,GACFA,EAAMH,OAEV,EALA,IAAK,IAAMH,KAAQhB,EAAaoB,EAAAC,GAShC,IAFA,IAAMG,EAAqBT,EAAMU,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAER,MAAQO,EAAEP,KAAK,IAExDS,EAAI,EAAGA,EAAIJ,EAAmBtB,OAAQ0B,IAC7CJ,EAAmBI,GAAGV,KAAOU,EAAI,EAEnC,MAAO,CAAE5B,gBAAewB,qBAC1B,CD/BWK,CAAajC,EAAMC,EAAWC,GAGhC,CACLE,cAAe,GAAIwB,mBAAoB,GAE3C,C,WE6EeM,MAlFf,WACE,IAAAC,EAAwBC,mBAAiB,IAAGC,EAAAC,YAAAH,EAAA,GAArCnC,EAAIqC,EAAA,GAAEE,EAAOF,EAAA,GACpBG,EAAkCJ,qBAAkBK,EAAAH,YAAAE,EAAA,GAA7CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAAkCR,qBAAkBS,EAAAP,YAAAM,EAAA,GAA7CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAAwCZ,mBAAyB,IAAGa,EAAAX,YAAAU,EAAA,GAA7DE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,EAAkChB,mBAAmB,IAAGiB,EAAAf,YAAAc,EAAA,GAAjDnD,EAASoD,EAAA,GAAEC,EAAYD,EAAA,GAC9BE,EAAoDnB,oBAAkB,GAAKoB,EAAAlB,YAAAiB,EAAA,GAApErD,EAAkBsD,EAAA,GAAEC,EAAqBD,EAAA,GAChDE,EAAkDtB,mBAAiBvC,GAAiB8D,EAAArB,YAAAoB,EAAA,GAA7EE,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GAE9CG,qBAAU,WACRC,EAAmBlE,EACrB,GAAG,IAEHiE,qBAAU,WACRnB,EAAa3C,EAAKM,QAClB,IACA0D,EAA4CjE,EAD5BC,EAAKiE,MAAM,KACiChE,EAAWC,GAAjEE,EAAa4D,EAAb5D,cAAewB,EAAkBoC,EAAlBpC,mBAErBuB,EAAgBvB,GAChBmB,EAAa3C,EAAcE,OAC7B,GAAG,CAACN,EAAMC,EAAWC,IAErB,IAAM6D,EAAqB,SAACjD,GAC1B+C,EAAqB/C,GACrB,IACMoD,EADUpD,EAAMmD,MAAM,KAEzB5D,QAAO,SAAAQ,GAAI,MAAa,KAATA,CAAW,IAC1BsD,KAAI,SAAAtD,GAAI,OAAIA,EAAKf,QAAQ,KAAM,GAAG,IAErCwD,EAAaY,EACf,EAEA,OACEE,eAAA,OAAKC,UAAU,gCAA+BC,SAAA,CAC5CF,eAAA,OAAKC,UAAU,sBAAqBC,SAAA,CAClCF,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAChCF,eAAA,KAAGC,UAAU,wBAAuBC,SAAA,CAAC,UAC3B5B,KAEV0B,eAAA,KAAGC,UAAU,wBAAuBC,SAAA,CAAC,UAC3BxB,KAEVsB,eAAA,SAAOG,QAAQ,YAAWD,SAAA,CAAC,oBAEzBE,cAAA,SACEC,KAAK,WACLC,GAAG,YACHL,UAAU,OACVM,QAASzE,EACT0E,SAAU,SAAAC,GAAO,OAAIpB,EAAsBoB,EAAQC,OAAOH,QAAQ,UAIxEP,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAClBE,cAAA,YACEH,UAAU,+BACVU,MAAO,CAAEC,UAAW,QACpB,cAAY,YACZJ,SAAU,SAAAC,GAAO,OAAItC,EAAQsC,EAAQC,OAAOhE,MAAM,EAClDmE,aAAcjF,EACdkF,KAAM,GACNC,YAAY,cAEdX,cAAA,YACE,cAAY,kBACZH,UAAU,+BACVU,MAAO,CAAEC,UAAW,QACpBJ,SAAU,SAAAC,GAAO,OAAId,EAAmBc,EAAQC,OAAOhE,MAAM,EAC7DqE,YAAY,yBACZF,aAAcrB,EACdwB,UAAWlF,UAIjBkE,eAAA,OAAKC,UAAU,0BAAyBC,SAAA,CACtCE,cAAA,MAAIH,UAAU,YAAWC,SAAC,wBACzBpB,EAAaiB,KAAI,SAACkB,EAAUC,GAAK,OAAKlB,eAAA,KAAAE,SAAA,CAAgBe,EAAS/D,KAAK,KAAG+D,EAASjE,KAAK,KAAGiE,EAAS9D,QAAnD+D,EAA6D,SAIpH,ECxEeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,SAAAC,GAAkD,IAA/CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,EACV,GAEJ,E,MCNAS,IAASC,OACP1B,cAAC2B,IAAMC,WAAU,CAAA9B,SACfE,cAACtC,EAAG,MAENmE,SAASC,eAAe,SAM1Bf,G","file":"static/js/main.8a6571bc.chunk.js","sourcesContent":["export const defaultStopWords = `not,\nno,\nin,\nif,\nget,\na,\nan,\nthis,\nhe,\nshe,\nof,\nfor,\nor,\nby,\nis,\nto,\non,\nwe,\nfrom,\nwhy,\nyou,\nas,\n#,\n-,\nit,\nits,\nit's,\nwill,\nthe,\nthat,\nfrom,\nhas,\nby,\nwas,\nwere,\nwith,\nsuch,\nbe,\nso`.replace(/\\n/g, '');\n","import { WordCountResult } from '../use-cases/types/types';\nimport { wordCountFor } from '../use-cases/words-count';\n\nexport function format(text: string[], stopWords: string[], isStopWordsEnabled: boolean) : WordCountResult  {\n  if (text) {\n    return wordCountFor(text, stopWords, isStopWordsEnabled);\n  }\n\n  return {\n    listOfStrings: [], sortByMostFrequent: []\n  };\n}","import { MostFrequent, WordCountResult } from './types/types';\n\nexport function wordCountFor(strings: string[], stopWords: string[], isStopWordsEnabled: boolean): WordCountResult {\n  let listOfStrings = strings.filter(strings => strings !== '');\n\n  if (stopWords.length && isStopWordsEnabled) {\n    listOfStrings = listOfStrings.filter(strings => {\n      for (let stop of stopWords) {\n        if (strings.includes(stop)) {\n          return false;\n        }\n      }\n      return true;\n    });\n  }\n\n  const empty = [];\n  for (const word in listOfStrings) {\n    empty.push(\n      { rank: 0, word: listOfStrings[word], count: 0 }\n    );\n  }\n\n  for (const word in listOfStrings) {\n    const found: MostFrequent | undefined = empty.find(strings => strings.word === listOfStrings[word]);\n    if (found) {\n      found.count++;\n    }\n  }\n\n  const sortByMostFrequent = empty.sort((a, b) => b.count - a.count);\n\n  for (let i = 0; i < sortByMostFrequent.length; i++) {\n    sortByMostFrequent[i].rank = i + 1;\n  }\n  return { listOfStrings, sortByMostFrequent };\n}","import 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { useEffect, useState } from 'react';\nimport { defaultStopWords } from '../use-cases/types/StopWords';\nimport { MostFrequent } from '../use-cases/types/types';\nimport { format } from '../presenters/word-count';\n\nfunction App() {\n  const [text, setText] = useState<string>('');\n  const [charCount, setCharCount] = useState<number>();\n  const [wordCount, setWordCount] = useState<number>();\n  const [mostFrequent, setMostFrequent] = useState<MostFrequent[]>([]);\n  const [stopWords, setStopWords] = useState<string[]>([]);\n  const [isStopWordsEnabled, setIsStopWordsEnabled] = useState<boolean>(true);\n  const [originalStopWords, setOriginalStopWords] = useState<string>(defaultStopWords);\n\n  useEffect(() => {\n    onStopWordsChanged(defaultStopWords);\n  }, []);\n\n  useEffect(() => {\n    setCharCount(text.length);\n    const strings = text.split(' ');\n    let { listOfStrings, sortByMostFrequent } = format(strings, stopWords, isStopWordsEnabled);\n\n    setMostFrequent(sortByMostFrequent);\n    setWordCount(listOfStrings.length);\n  }, [text, stopWords, isStopWordsEnabled]);\n\n  const onStopWordsChanged = (value: string) => {\n    setOriginalStopWords(value);\n    const strings = value.split(',');\n    const cleanedStopWords = strings\n      .filter(stop => stop !== '')\n      .map(stop => stop.replace('\\n', ''));\n\n    setStopWords(cleanedStopWords);\n  };\n\n  return (\n    <div className=\"flex h-screen overflow-hidden\">\n      <div className=\"flex flex-col w-4/5\">\n        <div className=\"flex items-center\">\n          <p className=\"p-2 m-2 border-2 w-60\">\n            Chars: {charCount}\n          </p>\n          <p className=\"p-2 m-2 border-2 w-60\">\n            Words: {wordCount}\n          </p>\n          <label htmlFor=\"stopwords\">\n            Ignore stop words\n            <input\n              type=\"checkbox\"\n              id=\"stopwords\"\n              className=\"ml-2\"\n              checked={isStopWordsEnabled}\n              onChange={changed => setIsStopWordsEnabled(changed.target.checked)}\n            />\n          </label>\n        </div>\n        <div className=\"m-2\">\n          <textarea\n            className=\"border-2 w-full outline-none\"\n            style={{ minHeight: '70vh' }}\n            data-testid=\"text-area\"\n            onChange={changed => setText(changed.target.value)}\n            defaultValue={text}\n            rows={10}\n            placeholder=\"Type here\"\n          />\n          <textarea\n            data-testid=\"stop-words-area\"\n            className=\"border-2 w-full outline-none\"\n            style={{ minHeight: '15vh' }}\n            onChange={changed => onStopWordsChanged(changed.target.value)}\n            placeholder=\"Stop words: the, an, I\"\n            defaultValue={originalStopWords}\n            disabled={!isStopWordsEnabled}\n          />\n        </div>\n      </div>\n      <div className=\"overflow-y-scroll w-1/5\">\n        <h1 className=\"font-bold\">Most frequent words</h1>\n        {mostFrequent.map((frequent, index) => <p key={index}>{frequent.rank}. {frequent.word}: {frequent.count}</p>)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './reactjs/App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}